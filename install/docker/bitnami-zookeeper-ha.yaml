services:
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3.8
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    ports:
      - 2181:2181

  kafka-0:
    container_name: kafka-0
    image: bitnami/kafka:3.9.0
    ports:
      - 29092:29092
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:29092 #2个listener,一个内部用,一个外部用
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT #要和listener的定义对应,EXTERNAL是自定义的名称
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-0:9092,EXTERNAL://localhost:29092 #这个配置告诉其他broker和客户端如何访问这个broker, 要和listener的定义对应
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT #在多个listener的情况下最好明确指定一下用哪个
    depends_on:
      - zookeeper

  kafka-1:
    container_name: kafka-1
    image: bitnami/kafka:3.9.0
    ports:
      - 39092:39092
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:39092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,EXTERNAL://localhost:39092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zookeeper

  kafka-2:
    container_name: kafka-2
    image: bitnami/kafka:3.9.0
    ports:
      - 49092:49092
    environment:
      KAFKA_CFG_NODE_ID: 2
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:49092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,EXTERNAL://localhost:49092
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zookeeper